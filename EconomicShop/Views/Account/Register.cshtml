
@{
    ViewBag.Title = "Register";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@model EconomicShop.ViewModel.Systems.Login.RegisterViewModel

@section embeddedCss{

    <link href="~/Assets/fonts/font-awesome-4.7.0/css/font-awesome.min.css" rel="stylesheet" />
    <link href="~/Assets/fonts/Linearicons-Free-v1.0.0/icon-font.min.css" rel="stylesheet" />
    <link href="~/Assets/animate/animate.css" rel="stylesheet" />
    <link href="~/Assets/css-hamburgers/hamburgers.min.css" rel="stylesheet" />
    <link href="~/Assets/select2/select2.min.css" rel="stylesheet" />

    <link href="~/Content/login/util.css" rel="stylesheet" />
    <link href="~/Content/login/main.css" rel="stylesheet" />
    <script nonce="ccdaec74-9442-4370-87f1-b6240e15f699">(function (w, d) { !function (eK, eL, eM, eN) { eK.zarazData = eK.zarazData || {}; eK.zarazData.executed = []; eK.zaraz = { deferred: [], listeners: [] }; eK.zaraz.q = []; eK.zaraz._f = function (eO) { return function () { var eP = Array.prototype.slice.call(arguments); eK.zaraz.q.push({ m: eO, a: eP }) } }; for (const eQ of ["track", "set", "debug"]) eK.zaraz[eQ] = eK.zaraz._f(eQ); eK.zaraz.init = () => { var eR = eL.getElementsByTagName(eN)[0], eS = eL.createElement(eN), eT = eL.getElementsByTagName("title")[0]; eT && (eK.zarazData.t = eL.getElementsByTagName("title")[0].text); eK.zarazData.x = Math.random(); eK.zarazData.w = eK.screen.width; eK.zarazData.h = eK.screen.height; eK.zarazData.j = eK.innerHeight; eK.zarazData.e = eK.innerWidth; eK.zarazData.l = eK.location.href; eK.zarazData.r = eL.referrer; eK.zarazData.k = eK.screen.colorDepth; eK.zarazData.n = eL.characterSet; eK.zarazData.o = (new Date).getTimezoneOffset(); if (eK.dataLayer) for (const eX of Object.entries(Object.entries(dataLayer).reduce(((eY, eZ) => ({ ...eY[1], ...eZ[1] }))))) zaraz.set(eX[0], eX[1], { scope: "page" }); eK.zarazData.q = []; for (; eK.zaraz.q.length;) { const e_ = eK.zaraz.q.shift(); eK.zarazData.q.push(e_) } eS.defer = !0; for (const fa of [localStorage, sessionStorage]) Object.keys(fa || {}).filter((fc => fc.startsWith("_zaraz_"))).forEach((fb => { try { eK.zarazData["z_" + fb.slice(7)] = JSON.parse(fa.getItem(fb)) } catch { eK.zarazData["z_" + fb.slice(7)] = fa.getItem(fb) } })); eS.referrerPolicy = "origin"; eS.src = "/cdn-cgi/zaraz/s.js?z=" + btoa(encodeURIComponent(JSON.stringify(eK.zarazData))); eR.parentNode.insertBefore(eS, eR) };["complete", "interactive"].includes(eL.readyState) ? zaraz.init() : eK.addEventListener("DOMContentLoaded", zaraz.init) }(w, d, 0, "script"); })(window, document);</script></head>
}

<div class="limiter">
    <div class="container-login100">
        <div class="wrap-login100 p-l-50 p-r-50 p-t-77 p-b-30">
            <form class="login100-form validate-form" action=@Url.Action("Register", "Account") method="post">
                @Html.AntiForgeryToken()
                <span class="login100-form-title p-b-55">
                    Đăng ký tài khoản
                </span>
                <div class="wrap-input100 validate-input m-b-16" data-validate="Valid email is required: ex@abc.xyz">
                    @Html.TextBoxFor((x => x.FullName), new { @class = "input100", @type = "text", @placeholder = "Nhập họ và tên" })
                    @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger py-1" })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <span class="lnr lnr-envelope"></span>
                    </span>
                </div>
                <div class="wrap-input100 validate-input m-b-16" data-validate="Valid email is required: ex@abc.xyz">
                    @Html.TextBoxFor((x => x.Email), new { @class = "input100", @type = "email", @placeholder = "Email" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger py-1" })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <span class="lnr lnr-envelope"></span>
                    </span>
                </div>
                <div class="wrap-input100 validate-input m-b-16" data-validate="Password is required">
                    @Html.TextBoxFor((x => x.Password), new { @class = "input100", @type = "password", @placeholder = "Mật khẩu" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger py-1" })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <span class="lnr lnr-lock"></span>
                    </span>
                </div>
                <div class="wrap-input100 validate-input m-b-16" data-validate="Re-Password is required">
                    @Html.TextBoxFor((x => x.ConfirmPassword), new { @class = "input100", @type = "password", @placeholder = "Nhập lại mật khẩu" })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger py-1" })
                    <span class="focus-input100"></span>
                    <span class="symbol-input100">
                        <span class="lnr lnr-lock"></span>
                    </span>
                </div>
                <div class="container-login100-form-btn p-t-25">
                    <button class="login100-form-btn">
                        Đăng ký
                    </button>
                </div>
                <div class="text-center w-full p-t-42 p-b-22">
                    <span class="txt1">
                        Or login with
                    </span>
                </div>
                <a href="#" class="btn-face m-b-10">
                    <i class="fa fa-facebook-official"></i>
                    Facebook
                </a>
                <a href="#" class="btn-google m-b-10">
                    <img src="~/Images/icons/icon-google.png" alt="GOOGLE">
                    Google
                </a>
                <div class="text-center w-full p-t-115">
                    <span class="txt1">
                        Bạn đã có tài khoản?
                    </span>
                    @Html.ActionLink("Đăng nhập ngay", "Login", "Account", null, new { @class = "txt1 bo1 hov1" })

                </div>
            </form>
        </div>
    </div>
</div>



@section embeddedScript{

    <script src="~/Assets/select2/select2.min.js"></script>
    <script src="~/Scripts/login/main.js"></script>

    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-23581568-13"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag() { dataLayer.push(arguments); }
        gtag('js', new Date());

        gtag('config', 'UA-23581568-13');
    </script>
    <script defer src="https://static.cloudflareinsights.com/beacon.min.js/vaafb692b2aea4879b33c060e79fe94621666317369993" integrity="sha512-0ahDYl866UMhKuYcW078ScMalXqtFJggm7TmlUtp0UlD4eQk0Ixfnm5ykXKvGJNFjLMoortdseTfsRT8oCfgGA==" data-cf-beacon='{"rayId":"77ff3ab02b137ce6","token":"cd0b4b3a733644fc843ef0b185f98241","version":"2022.11.3","si":100}' crossorigin="anonymous"></script>

}

